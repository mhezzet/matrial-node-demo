{"version":3,"sources":["components/layouts/Footer.jsx","components/exercises/Form.jsx","components/exercises/Dialog.jsx","components/layouts/Header.jsx","components/exercises/Main.jsx","store.js","components/App.jsx","serviceWorker.js","index.js"],"names":["withWidth","_ref","muscles","onSelect","selectedMuscle","width","index","findIndex","muscle","react_default","a","createElement","index_es","position","onChange","e","value","indicatorColor","textColor","scrollable","centered","label","map","key","Form","state","title","description","handleChange","name","target","_this","setState","Object","defineProperty","handleSubmit","props","onSubmiting","objectSpread","id","concat","Math","random","onFinishSubmiting","this","selectedExercise","_this$props","catagories","type","_this$state","console","log","style","display","margin","fullWidth","htmlFor","displayEmpty","multiline","rows","onClick","color","variant","disabled","Component","Create","open","handleClick","handleClose","onCreate","react","aria-label","mini","icons_index_es","onClose","exercises_Form","Header","flexGrow","Dialog","withStyles","paper","padding","height","overflowY","headline","textTransform","leftPaneSubheading","marginTop","exercises","onDelete","onEditMode","onEdit","editMode","classes","_ref$selectedExercise","_ref$selectedExercise2","_ref$selectedExercise3","container","item","xs","sm","className","_ref2","_ref3","slicedToArray","group","component","_ref4","button","primary","App","SelectedMuscle","handleSelect","handleSelectedExercise","find","exercise","handleCreate","toConsumableArray","handleDelete","filter","handleEditMode","handleEdit","_ref5","ex","initExercises","reduce","entries","getExercisesByMuscles","exercises_Main","layouts_Footer","theme","@global","html, body, #root","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3322cfba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Tab, Tabs, withWidth } from '@material-ui/core'\r\n\r\nfunction Footer({ muscles, onSelect, selectedMuscle, width }) {\r\n  const index = muscles\r\n    ? muscles.findIndex(muscle => muscle === selectedMuscle) + 1\r\n    : 0\r\n\r\n  const onMuscleSelect = (e, index) => {\r\n    onSelect(index === 0 ? '' : muscles[index - 1])\r\n  }\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Tabs\r\n        onChange={onMuscleSelect}\r\n        value={index}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        scrollable={width === 'xs'}\r\n        centered={width !== 'xs'}\r\n      >\r\n        <Tab label=\"All\" />\r\n        {muscles.map(muscle => (\r\n          <Tab key={muscle} label={muscle} />\r\n        ))}\r\n      </Tabs>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default withWidth()(Footer)\r\n","import React, { Component } from 'react'\r\nimport {\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Button\r\n} from '@material-ui/core'\r\n\r\nclass Form extends Component {\r\n  state = { title: '', description: '', muscles: '' }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.selectedExercise) return\r\n    this.setState({ ...this.props.selectedExercise })\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) =>\r\n    this.setState({ [name]: value })\r\n\r\n  handleSubmit = () => {\r\n    //TODO:validate\r\n\r\n    this.props.onSubmiting({\r\n      id: `${this.state.title} - ${Math.random()}`,\r\n      ...this.state\r\n    })\r\n    this.props.onFinishSubmiting && this.props.onFinishSubmiting()\r\n  }\r\n\r\n  render() {\r\n    const { muscles: catagories, type } = this.props,\r\n      { title, description, muscles } = this.state\r\n    console.log(this.state)\r\n    return (\r\n      <form style={{ display: 'contents' }}>\r\n        <TextField\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={this.handleChange('title')}\r\n          margin=\"normal\"\r\n          fullWidth\r\n        />\r\n        <FormControl fullWidth margin=\"normal\">\r\n          <InputLabel htmlFor=\"age-native-simple\">muscles</InputLabel>\r\n          <Select\r\n            value={muscles}\r\n            displayEmpty\r\n            onChange={this.handleChange('muscles')}\r\n          >\r\n            {catagories.map(muscle => (\r\n              <option key={muscle} value={muscle}>\r\n                {muscle}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          label=\"Description\"\r\n          value={description}\r\n          onChange={this.handleChange('description')}\r\n          margin=\"normal\"\r\n          multiline\r\n          rows=\"4\"\r\n          fullWidth\r\n        />\r\n        <Button\r\n          onClick={this.handleSubmit}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          disabled={!muscles || !title}\r\n        >\r\n          {type}\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n","import React, { Fragment, Component } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport Form from './Form'\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  render() {\r\n    const { open } = this.state,\r\n      { onCreate, muscles } = this.props\r\n\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          variant=\"fab\"\r\n          color=\"secondary\"\r\n          aria-label=\"Add\"\r\n          onClick={this.handleClick}\r\n          mini\r\n        >\r\n          <Add />\r\n        </Button>\r\n        <Dialog open={open} onClose={this.handleClose} fullWidth>\r\n          <div style={{ margin: 20 }}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Create a New Exercise\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>Please fill the form below</DialogContentText>\r\n            </DialogContent>\r\n            <Form\r\n              muscles={muscles}\r\n              onSubmiting={onCreate}\r\n              type=\"create\"\r\n              onFinishSubmiting={this.handleClose}\r\n            />\r\n          </div>\r\n        </Dialog>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Create\r\n","import React from 'react'\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport CreateDialog from '../exercises/Dialog'\r\n\r\nexport default function Header({ muscles, onCreate }) {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\r\n          New App\r\n        </Typography>\r\n        <CreateDialog muscles={muscles} onCreate={onCreate} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { Delete, Edit } from '@material-ui/icons'\r\nimport {\r\n  ListItemText,\r\n  Typography,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  withStyles,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem\r\n} from '@material-ui/core'\r\nimport Form from './Form'\r\n\r\nconst styles = {\r\n  paper: { padding: 10, margin: 10, height: 500, overflowY: 'auto' },\r\n  headline: { textTransform: 'capitalize' },\r\n  leftPaneSubheading: { marginTop: 20 }\r\n}\r\n\r\nfunction Main({\r\n  exercises,\r\n  selectedMuscle,\r\n  onSelect,\r\n  onDelete,\r\n  onEditMode,\r\n  onEdit,\r\n  editMode,\r\n  muscles,\r\n  classes,\r\n  selectedExercise: {\r\n    title = 'Welcome',\r\n    description = 'Please select an exersice from the list on the left.'\r\n  },\r\n  selectedExercise\r\n}) {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} sm={6}>\r\n        <Paper className={classes.paper}>\r\n          {exercises.map(([group, exercises]) =>\r\n            !selectedMuscle || selectedMuscle === group ? (\r\n              <Fragment key={group}>\r\n                <Typography variant=\"h6\" color=\"secondary\">\r\n                  {group}\r\n                </Typography>\r\n                <List component=\"ul\">\r\n                  {exercises.map(({ title, id }) => (\r\n                    <ListItem\r\n                      variant=\"body1\"\r\n                      key={id}\r\n                      button\r\n                      onClick={() => onSelect(id)}\r\n                    >\r\n                      <ListItemText primary={title} />\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton>\r\n                          <Edit onClick={() => onEditMode(id)} />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                          <Delete onClick={() => onDelete(id)} />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Fragment>\r\n            ) : null\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        {editMode ? (\r\n          <Paper className={classes.paper}>\r\n            <Form\r\n              key={Math.random()}\r\n              selectedExercise={selectedExercise}\r\n              muscles={muscles}\r\n              onSubmiting={onEdit}\r\n              type=\"Edit\"\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h4\" color=\"secondary\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.leftPaneSubheading}>\r\n              {description}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(Main)\r\n","export const muscles = ['shoulders', 'chest', 'arms', 'back', 'legs']\r\n\r\nexport const exercises = [\r\n  {\r\n    id: 'overhead-press',\r\n    title: 'Overhead Press',\r\n    description: 'Delts exercise...',\r\n    muscles: 'shoulders'\r\n  },\r\n  {\r\n    id: 'dips',\r\n    title: 'Dips',\r\n    description: 'Triceps exercise...',\r\n    muscles: 'arms'\r\n  },\r\n  {\r\n    id: 'barbell-curls',\r\n    title: 'Barbell Curls',\r\n    description: 'Biceps exercise...',\r\n    muscles: 'arms'\r\n  },\r\n  {\r\n    id: 'bench-press',\r\n    title: 'Bench Press',\r\n    description: 'Chest exercise...',\r\n    muscles: 'chest'\r\n  },\r\n  {\r\n    id: 'pull-ups',\r\n    title: 'Pull Ups',\r\n    description: 'Back and biceps exercise...',\r\n    muscles: 'back'\r\n  },\r\n  {\r\n    id: 'deadlifts',\r\n    title: 'Deadlifts',\r\n    description: 'Back and leg exercise...',\r\n    muscles: 'back'\r\n  },\r\n  {\r\n    id: 'squats',\r\n    title: 'Squats',\r\n    description: 'Legs exercise...',\r\n    muscles: 'legs'\r\n  }\r\n]\r\n","import React, { Component } from 'react'\nimport { Header, Footer } from './layouts'\nimport Main from './exercises/Main'\nimport { exercises, muscles } from '../store'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  '@global': {\n    'html, body, #root': { height: '100vh' }\n  },\n  container: {\n    height: '100vh'\n  }\n})\n\nclass App extends Component {\n  state = {\n    exercises,\n    SelectedMuscle: '',\n    selectedExercise: {},\n    editMode: false\n  }\n\n  getExercisesByMuscles() {\n    const initExercises = muscles.reduce(\n      (exercises, muscle) => ({ ...exercises, [muscle]: [] }),\n      {}\n    )\n\n    return Object.entries(\n      this.state.exercises.reduce((exercises, exercise) => {\n        const { muscles } = exercise\n\n        exercises[muscles] = [...exercises[muscles], exercise]\n\n        return exercises\n      }, initExercises)\n    )\n  }\n\n  handleSelect = value => this.setState({ SelectedMuscle: value })\n\n  handleSelectedExercise = id =>\n    this.setState(({ exercises }) => ({\n      selectedExercise: exercises.find(exercise => exercise.id === id),\n      editMode: false\n    }))\n\n  handleCreate = exercise =>\n    this.setState(({ exercises }) => ({ exercises: [...exercises, exercise] }))\n\n  handleDelete = id =>\n    this.setState(({ exercises, selectedExercise, editMode }) => ({\n      exercises: exercises.filter(exercise => exercise.id !== id),\n      selectedExercise: selectedExercise.id === id ? {} : selectedExercise,\n      editMode: selectedExercise.id === id ? false : editMode\n    }))\n\n  handleEditMode = id =>\n    this.setState(({ exercises }) => ({\n      editMode: true,\n      selectedExercise: exercises.find(exercise => exercise.id === id)\n    }))\n\n  handleEdit = exercise =>\n    this.setState(({ exercises }) => ({\n      exercises: [...exercises.filter(ex => ex.id !== exercise.id), exercise],\n      selectedExercise: {},\n      editMode: false\n    }))\n\n  render() {\n    const exercises = this.getExercisesByMuscles()\n    const { SelectedMuscle, selectedExercise, editMode } = this.state,\n      { classes } = this.props\n\n    return (\n      <div className={classes.container}>\n        <Header muscles={muscles} onCreate={this.handleCreate} />\n        <Main\n          exercises={exercises}\n          selectedMuscle={SelectedMuscle}\n          onSelect={this.handleSelectedExercise}\n          selectedExercise={selectedExercise}\n          onDelete={this.handleDelete}\n          onEditMode={this.handleEditMode}\n          editMode={editMode}\n          muscles={muscles}\n          onCreate={this.handleCreate}\n          onEdit={this.handleEdit}\n        />\n        <Footer\n          muscles={muscles}\n          onSelect={this.handleSelect}\n          selectedMuscle={SelectedMuscle}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/style.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n// import Theme from './theme'\n// import { install } from '@material-ui/styles'\n\n// install()\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}